<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.archstudio.myxgen" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.archstudio.myxgen" id="org.archstudio.myxgen.brick" name="MyxBrick"/>
      </appinfo>
      <documentation>
         Defines a myx brick, it&apos;s interfaces, their classes, etc. It essentially replaces the Component/ConnectorType in xADL. 
MyxCodegen will generate abstract base classes that can be used as the basis for implementing the brick.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="brick" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="brick">
      <annotation>
         <documentation>
            A brick corresponds to a component/connector in an architecture.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="description" minOccurs="0" maxOccurs="1"/>
            <element ref="interface" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  A unique id in the workspace.
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The name of the brick.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string">
            <annotation>
               <documentation>
                  The java class name of the brick where the user should implement brick interface specific code. Myx codegen will generate the java source code specified by this name.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="stubClass" type="string">
            <annotation>
               <documentation>
                  The java class name of the brick. base class where myx framework part will be implemented. Myx codegen will generate the java source code specified by this name.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.archstudio.myx.fw.IMyxBrick"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="abstract" type="boolean">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="parentBrick" type="string">
            <annotation>
               <documentation>
                  The parent brick id that will be extended. When this attribute is specified, MyxCodegen will include all the Brick interfaces of the parent (and its ancestors).
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier" basedOn="org.archstudio.myxgen.brick/brick/@id"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="interface">
      <annotation>
         <documentation>
            An interface is a port through which a brick exposes its service to others or utilize services provided by others.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="description" minOccurs="0" maxOccurs="1"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  A unique id within a brick.
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The name of this interface. The name will be used as a java variable in the generated code and must be unique in the brick.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="domain">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="top">
                  </enumeration>
                  <enumeration value="bottom">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="direction" use="required">
            <annotation>
               <documentation>
                  The direction specifies whether the brick gives out its service object through &quot;in&quot; interface or uses other service object(s) through &quot;out&quot; interfaces.  
&lt;ul&gt;
 &lt;li&gt;
 &quot;In&quot; direction indicates that the service object of the brick will be grabbed by other brick(s) through this interface. Specifically, the service object will be given out via org.archstudio.myx.fw.IMyxDynamicBrick#IMyxProvidedServiceProvider(). 
  &lt;ul&gt; 
  &lt;li&gt;
   inSingleServiceObject: the service object will be grabbed through this interface.
  &lt;/li&gt;
  &lt;/ul&gt;
 &lt;/li&gt;
 
 &lt;li&gt;
 &quot;Out&quot; direction indicates that the brick will use service object(s) through this interface. Specifically, the service object(s) will be obtained through org.archstudio.myx.fw.IMyxDynamicBrick#interfaceConnected(). 
  &lt;ul&gt;
  &lt;li&gt;
  outSingleServiceObject:the brick will grab a single service object through this interface.
  &lt;/li&gt;
  &lt;li&gt;
  outMultipleServiceObjects: the brick will grab multiple service objects through this interface.
  &lt;/li&gt;
  &lt;/ul&gt;
 &lt;/li&gt;
&lt;/ul&gt;
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="in">
                  </enumeration>
                  <enumeration value="out">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="single" type="boolean" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="delegate" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="variable">
                  </enumeration>
                  <enumeration value="brick">
                  </enumeration>
                  <enumeration value="events">
                  </enumeration>
                  <enumeration value="myxRegistry">
                  </enumeration>
                  <enumeration value="none">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="getter" type="boolean" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The java interface the service object through this interface will implement. The developer needs to prepare the interface according to the service he/she wants to implement.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="description" type="string">
      <annotation>
         <appinfo>
            <meta.element translatable="true"/>
         </appinfo>
         <documentation>
            Human readable description.
         </documentation>
      </annotation>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         ArchStudio 5
      </documentation>
   </annotation>


   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         No API is provided for this extension.
      </documentation>
   </annotation>



</schema>
