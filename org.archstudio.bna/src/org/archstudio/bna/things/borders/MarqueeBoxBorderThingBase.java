package org.archstudio.bna.things.borders;

import org.archstudio.bna.IBNAView;
import org.archstudio.bna.ICoordinateMapper;
import org.archstudio.bna.IThingPeer;
import org.eclipse.jdt.annotation.NonNullByDefault;
import org.eclipse.jdt.annotation.Nullable;

/*
 * DO NOT EDIT THIS FILE, it is automatically generated. ANY MODIFICATIONS WILL BE OVERWRITTEN.
 *
 * To modify, update the thingdefinition extension at
 * org.archstudio.bna/Package[name=org.archstudio.bna.things.borders]/Thing[name=MarqueeBoxBorder].
 */

@SuppressWarnings("all")
@NonNullByDefault
public abstract class MarqueeBoxBorderThingBase extends org.archstudio.bna.things.AbstractThing
    implements org.archstudio.bna.IThing, org.archstudio.bna.facets.IHasMutableBoundingBox,
    org.archstudio.bna.facets.IHasMutableRotatingOffset {
  public MarqueeBoxBorderThingBase(@Nullable Object id) {
    super(id);
  }

  @Override
  public IThingPeer<? extends MarqueeBoxBorderThing> createPeer(IBNAView view,
      ICoordinateMapper cm) {
    return new MarqueeBoxBorderThingPeer<>((MarqueeBoxBorderThing) this, view, cm);
  }

  @Override
  protected void initProperties() {
    initProperty(org.archstudio.bna.facets.IHasBoundingBox.BOUNDING_BOX_KEY,
        new org.eclipse.swt.graphics.Rectangle(0, 0, 30, 20));
    addShapeModifyingKey(org.archstudio.bna.facets.IHasBoundingBox.BOUNDING_BOX_KEY);
    initProperty(org.archstudio.bna.facets.IHasRotatingOffset.ROTATING_OFFSET_KEY, 0);
    super.initProperties();
  }

  @Override
  public org.eclipse.swt.graphics.Rectangle getBoundingBox() {
    return get(org.archstudio.bna.facets.IHasBoundingBox.BOUNDING_BOX_KEY);
  }

  /* package */ org.eclipse.swt.graphics.Rectangle getRawBoundingBox() {
    return getRaw(org.archstudio.bna.facets.IHasBoundingBox.BOUNDING_BOX_KEY);
  }

  @Override
  public void setBoundingBox(org.eclipse.swt.graphics.Rectangle boundingBox) {
    set(org.archstudio.bna.facets.IHasBoundingBox.BOUNDING_BOX_KEY, boundingBox);
  }

  /* package */ org.eclipse.swt.graphics.Rectangle setRawBoundingBox(
      org.eclipse.swt.graphics.Rectangle boundingBox) {
    return setRaw(org.archstudio.bna.facets.IHasBoundingBox.BOUNDING_BOX_KEY, boundingBox);
  }

  @Override
  public int getRotatingOffset() {
    return get(org.archstudio.bna.facets.IHasRotatingOffset.ROTATING_OFFSET_KEY);
  }

  /* package */ int getRawRotatingOffset() {
    return getRaw(org.archstudio.bna.facets.IHasRotatingOffset.ROTATING_OFFSET_KEY);
  }

  @Override
  public void setRotatingOffset(int rotatingOffset) {
    set(org.archstudio.bna.facets.IHasRotatingOffset.ROTATING_OFFSET_KEY, rotatingOffset);
  }

  /* package */ int setRawRotatingOffset(int rotatingOffset) {
    return setRaw(org.archstudio.bna.facets.IHasRotatingOffset.ROTATING_OFFSET_KEY, rotatingOffset);
  }
}
